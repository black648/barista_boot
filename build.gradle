plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'war'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'org.barista'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

repositories {
    mavenCentral()
    maven { url "https://maven.jahia.org/maven2"}
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'commons-collections:commons-collections:3.2.2'
    implementation 'commons-lang:commons-lang:2.6'
    implementation 'com.fasterxml.uuid:java-uuid-generator:4.0.1'
    implementation 'org.modelmapper:modelmapper:3.1.0'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //querydsl 추가
    implementation 'com.querydsl:querydsl-jpa'
//    implementation 'com.querydsl:querydsl-apt'

    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
//    implementation files('lib/ojdbc6.jar')

//    compile group: 'com.oracle', name: 'ojdbc7', version: '12.1.0.2'
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.6'
//    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.7.3'
    compile('com.h2database:h2')
}

test {
    useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}